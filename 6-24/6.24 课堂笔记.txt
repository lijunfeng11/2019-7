
课堂笔记：

1、“用户画像”概念：
	在电商领域，可以通过对用户的访问日志来进行分析，从对每一个用户进行特征的分析和归类，
然后根据这些用户的特征来进行“用户画像”；
	目的：通过“用户画像”，可以对用户进行商品的智能推荐，从而提高商家的收益。
	
2、大数据“用户画像”项目 ， 本项目包含有：
	第一部分：项目业务背景介绍
	第二部分：整体技术流程及架构
	第三部分：项目各模块开发
	第四部分：大数据数据可视化
	
3、项目业务背景介绍：
	当有用户在访问电商网站时，一般情况下，都会访问多个商品页面，然后对用户访问的所有页面进行
汇总，我们并不会单独去分析用户访问的某一个页面进行分析，而是将所有访问的页面汇总起来，进行
统一的分析。
	指标：
		PV   ： 一个网站每天的浏览量； 
		UV  ： 一个网站每天被多少个用户所访问；

4、项目整体架构：（重点）
	补充：当用户访问某一个页面时，用户会在该页面中进行点击行为，当用户产生点击行为时，
				会触发前端页面中JS代码（“埋点”程序 ： 专门用来监听用户的点击行为），然后就会生成一条
				用户访问日志。
				然后通过异步请求ajax，将该条用户访问日志发送后台web服务器上存储；
				ajax : 当在前端页面上产生点击行为时，不是当前整个页面进行全部刷新，而是某一个局部进行刷新；

5、虚拟机操作：
	（1）准备好虚拟机： CentOS 64位   CentOS 32位
	（2）打开虚拟机进行网络配置：
				（1）删除当前虚拟机旧的MAC码，然后重启虚拟机；
				（2）网络配置：
	（3）重启网络：service network restart;
				(如果在启动的过程中报错，说明配置有问题)

6、数据采集框架 ： Flume
	构成：1）source ： 接收器，接收外界传递来的数据；
				2）channel ： 数据传输通道，将source接收来的数据输出到sink ,  channel一般情况下是基于内存的；
				3）sink : 发送器，可以根据配置将数据发送到不同的目的地；
	flume脚本的编写规范：
		flume框架不需要编程就可以直接使用，通过配置文件来配置不同的使用场景；
		flume脚本的构成：
		（1）命名空间 ： 将flume中的各个组件进行命名；
										（在flume中，一个实例叫做：agent）
					############################################################
					# 1、命名：一个agent（进程）内各角色别名：a1
					############################################################
					#sources别名:r1
					a1.sources = r1  
					#sink别名:k1
					a1.sinks = k1
					#channel别名：c1
					a1.channels = c1
		（2）source组件的配置：第一，指定source的类型，第二，指定source的参数；
					############################################################
					# 2、source参数配置：
					############################################################
					#source类型：netcat 专门监听一个端口，当该端口有数据产生时，获取数据
					a1.sources.r1.type = netcat
					#监听的主机ip:
					a1.sources.r1.bind = 192.168.100.101
					#监听的端口：
					a1.sources.r1.port = 8888
		（3）channel组件的配置：第一，指定channel的类型，第二，指定channel的参数；
					############################################################
					# 3、channel参数配置：
					############################################################
					#channel类型：基于内存缓存
					a1.channels.c1.type = memory
					#默认该通道中最大的可以存储的event数量是1000
					a1.channels.c1.capacity = 1000
					#每次最大可以source中拿到或者送到sink中的event数量也是100
					a1.channels.c1.transactionCapacity = 100
		（4）sink组件的配置：第一，指定sink的类型，第二，指定sink的参数；
					############################################################
					# 4、channel参数配置：
					############################################################
					#sink类型：以日志的方式输出
					a1.sinks.k1.type = logger	
		（5）将flume的实例agent的各个属性进行封装：
					############################################################
					# 5、集成一个agent当中的各个角色：
					############################################################
					a1.sources.r1.channels = c1
					a1.sinks.k1.channel = c1
					
flume案例练习：
		flume监听端口：
	（1）编写flume01.conf:
	 （2）执行当前脚本：flume-ng agent -n a1 -f flume01.conf -D flume.root.logger=INFO,console
	 （3）测试：网络应用命令：telnet
						下载：yum install -y telnet
						连接端口：telnet 192.168.100.101 8888
			[root@node1 ~]# telnet 192.168.100.101 8888
			Trying 192.168.100.101...
			Connected to 192.168.100.101.
			Escape character is '^]'.
			编写内容
		    查看flume日志；
			
			flume监听文件：
			（1）编写flume02.conf
			（2）执行当前脚本：flume-ng agent -n a1 -f flume02.conf -D flume.root.logger=INFO,console
			（3）测试：
							vim access.log 
							添加一行内容：
							gongchengxueyuan
					查看flume的输出日志；
			
			
	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
